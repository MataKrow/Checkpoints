// [STANDALONE]
#library "SPPRESET"
#include "zcommon.acs"

int levnum;

//////////////////////////////////////////////////////////////
//						  TEMPLATE							//
//////////////////////////////////////////////////////////////
/*
Some guidlines I set for myself while placing checkpoints.

- Should not be near monster spawns
- SaveDisk should be easy to spot
- Far from the start point
- Before memorable moments
- In a lock-in battle
- Position should be able to scan a in-progress battle by first sight
- Position should be a place where the player can choose thier next action freely
- Start distanced One way areas connected to the exit.
*/
script "sp_Presets_User_Defined" OPEN
{
	/////////////////////////////////////////////////////////////////////////	TEMPLATE
	switch (GetCvar("sp_Presets")) 												//Reads from the sp_Presets cvar.
	{
		case 1000:																//Sets a value the cvar can draw from
			levnum = GetLevelInfo(LEVELINFO_LEVELNUM);							//Gets the levelnums from the mapinfo
			switch (levnum)														//switch statement
			{
				case 1: 														//MAP01
					Log(s:"\c[sp_Chlorine]USER-DEFINED checkpoints loaded."); 	//Message to tell the player that checkpoints have loaded.
					PlaceCheckpoint(0.0,0.0,0.0); 								// Places the checkpoint by values XYZ
					break;														//Ends script for map 01
				case 2:															//MAP02
					PlaceCheckpoint(0.0,0.0,0.0);								// Places the checkpoint by values XYZ
					break;														//Ends script for map 02
				default:
				break;
			}
	}
}

//////////////////////////////////////////////////////////////
//						PRESETS								//
//////////////////////////////////////////////////////////////

script "SP_Presets" OPEN
{
	switch (GetCvar("sp_Presets"))
	{
		case 600: //////////////////////////////////////////////////////////////// AUGER ; ZENITH
			levnum = GetLevelInfo(LEVELINFO_LEVELNUM);
			switch (levnum)
			{
				case 1: 	//MAP01
				Log(s:"\c[sp_Chlorine]AUGER; ZENITH checkpoints loaded.");
				PlaceCheckpoint(1640.57,609.531,88);
				break;
				case 5:		//MAP05
				PlaceCheckpoint(185.978,2325.91,768);
				break;
				case 6:		//MAP06
				PlaceCheckpoint(-2061.93,-5120.59,-648);
				break;
				case 7:		//MAP07
				PlaceCheckpoint(3833.4,1089.31,329);
				break;
				case 10:	//MAP10
				PlaceCheckpoint(-6977.98,-2171.73,340);
				PlaceCheckpoint(-6699.04,362.849,128);
				break;
				case 11:	//MAP11
				PlaceCheckpoint(4244.62,-1907.33,256);
				break;
				case 12:	//MAP12
				PlaceCheckpoint(-8065.75,-31807.6,64);
				break;
				case 13:	//MAP13
				PlaceCheckpoint(1472.71,-1632.96,-704);
				break;
				case 14:	//MAP14
				PlaceCheckpoint(-4025.61,2724.68,48);
				break;
				case 15:	//MAP15
				PlaceCheckpoint(-2049.39,2479.77,24);
				break;
				case 16:	//MAP16
				PlaceCheckpoint(4866.51,1422.75,-412.435);
				PlaceCheckpoint(3256.35,-1782.55,-200);
				break;
				case 17: //MAP17
				PlaceCheckpoint(1813.92,1757.32,104);
				PlaceCheckpoint(115.662,-100.077,176);
				break;
				case 18:	//MAP18
				PlaceCheckpoint(-480.616,-379.459,44);
				PlaceCheckpoint(-980.97,591.432,144);
				break;
				case 19:	//MAP19
				PlaceCheckpoint(351.269,979.555,0);
				break;
				case 20:	//MAP20
				PlaceCheckpoint(3338.55,296.999,199.007);
				break;
				case 21:	//MAP21
				PlaceCheckpoint(-516.612,4169.93,56);
				break;
				default:
				break;
			}
		break;
		case 601: 	//////////////////////////////////////////////////////////////// Sunlust															//Sets a value the cvar can draw from
			levnum = GetLevelInfo(LEVELINFO_LEVELNUM);							//Gets the levelnums from the mapinfo
			switch (levnum)														//switch statement
			{
				case 1: 														//MAP01
					Log(s:"\c[sp_Chlorine]Sunlust checkpoints loaded."); 		//Message to tell the player that checkpoints have loaded.
					PlaceCheckpoint(0.0,0.0,0.0); 								// Places the checkpoint by values XYZ
					break;														//Ends script for map 01
				case 2:															//MAP02
					PlaceCheckpoint(0.0,0.0,0.0);								// Places the checkpoint by values XYZ
					break;
				default:
				break;
			}
		break;
	}
}

//Values except the last one must be fixed-point.
function void PlaceCheckpoint(int sdx,int sdy,int sdz)
{
SpawnForced("sp_SaveDisk",sdx,sdy,sdz,0,0);
}